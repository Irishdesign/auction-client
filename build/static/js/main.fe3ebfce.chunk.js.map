{"version":3,"sources":["serviceWorker.js","store/types.js","store/action.js","Endpoint/index.js","constants.js","utils/index.js","components/SignupModal/index.js","components/LoginModal/index.js","components/CreateModal/index.js","components/NavBar/index.js","components/SideMenu/index.js","components/AuctionInfo/index.js","components/Orders/index.js","components/Players/index.js","containers/Home/index.js","components/InvitationHeader/index.js","containers/Invitation/index.js","containers/Bid/index.js","store/reducers.js","index.js"],"names":["Boolean","window","location","hostname","match","SET_USER","SET_CURRENT_AUCTION","SET_SHOW_MENU","SET_SHOW_CREATE","SET_PLAYER_DATA","LOG_OUT","setUser","user","type","types","data","logout","setCurrentAuction","get_AUCTION_API","no","create_ORDER_API","create_PLAYER_API","start_AUCTION_API","close_AUCTION_API","GET","POST","AUC_TYPE","ENGLISH","DUTCH","SEALED1","SEALED2","INIT_VALUE_TYPE","UNIFORM","GAUSSIAN","SESSION_KEY","login","values","callback","axios","post","then","response","localStorage","setItem","constants","accessToken","error","console","log","TOKEN","getItem","getUserInfo","method","url","token","getMenu","headers","createAuction","createOrder","createPlayer","name","catch","err","getAuction","startAuction","closeAuction","layout","labelCol","span","wrapperCol","tailLayout","offset","SignupModal","props","Form","useForm","form","visible","useDispatch","close","title","onCancel","footer","onFinish","utils","Item","label","rules","required","Password","htmlType","onClick","setFieldsValue","username","email","password","LoginModal","dispatch","React","useEffect","util","r","message","Option","Select","CreateModal","useState","isAuto","setIsAuto","isSealed","setIsSealed","isGaussian","setIsGaussian","a","open","width","initialValue","style","margin","onChange","v","value","e","target","checked","NavBar","showLogin","setShowLogin","showSignup","setShowSignup","isLogin","useSelector","state","showMenu","showCreatePanel","showingForum","showingCreate","action","checkUser","info","status","warning","className","MenuOutlined","icon","faGavel","SubMenu","Menu","SideMenu","setData","openKey","setOpenKey","currentAuction","init","auc_type","d","filter","m","res","Array","isArray","ele","handleOpenKey","ty","defaultSelectedKeys","defaultOpenKeys","openKeys","mode","theme","inlineCollapsed","key","RiseOutlined","onTitleClick","map","to","close_time","CloseCircleOutlined","FallOutlined","MailOutlined","AuctionInfo","isPlayer","playerInfo","start_time","left_time","auto_t_fragment","auto_p_fragment","from_std","init_price","is_auto","period","reservation_price","to_dev","value_type","winner","current_price","formatTime","str","split","replace","blank","column","vertical","href","size","bordered","Object","keys","forEach","getTypeLabel","init_value","current_value","getValueTypeLabel","Orders","length","columns","dataIndex","onFilter","record","indexOf","sorter","b","price","sortDirections","address","dataSource","player","time","createdAt","join","pagination","scroll","y","Players","filters","text","hasSent","formatData","App","setMyPrice","setIsClosed","current_auction_data","query","queryString","parse","search","retrieveAuction","QueryParamsDemo","handleAuction","cmd","c","updateWithCountDown","setTimeout","handleDeductPrice","isDutch","orders","players","InvitationHeader","QRCode","require","base_url","process","REACT_APP_BASE","setInfo","myPrice","playerData","showPlayerPage","auctionNo","auction","handleCreateOrder","sendData","player_id","id","success","initialState","currentCountry","store","createStore","ReactDOM","render","exact","path","component","home","Invitation","Bid","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe3ebfce.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SET_USER = \"SET_USER\";\nexport const SET_CURRENT_AUCTION = \"SET_CURRENT_AUCTION\";\nexport const SET_SHOW_MENU = \"SET_SHOW_MENU\";\nexport const SET_SHOW_CREATE = \"SET_SHOW_CREATE\";\nexport const SET_PLAYER_DATA = \"SET_PLAYER_DATA\";\nexport const LOG_OUT = \"LOG_OUT\";\n","import * as types from \"./types\";\n\nexport function setUser(user) {\n    return {\n        type: types.SET_USER,\n        data: user,\n    };\n}\n\nexport function logout() {\n    return {\n        type: types.LOG_OUT,\n        data: false,\n    };\n}\n\nexport const setCurrentAuction = (data) => {\n    return {\n        type: types.SET_CURRENT_AUCTION,\n        data,\n    };\n};\n\nexport const setShowMenu = (v) => {\n    console.log(\"setShowMenu\", v);\n    return {\n        type: types.SET_SHOW_MENU,\n        data: v,\n    };\n};\nexport const setShowCreatePanel = (v) => {\n    console.log(\"setShowCreatePanel\", v);\n    return {\n        type: types.SET_SHOW_CREATE,\n        data: v,\n    };\n};\n\nexport const setPlayerData = (data) => {\n    return {\n        type: types.SET_PLAYER_DATA,\n        data,\n    };\n};\n// export function setDetailData(data, events) {\n//     return {\n//         type: types.UPDATE_DETAIL,\n//         payload: { data, events },\n//     };\n// }\n","export const SIGNUP_API = \"https://autcion.herokuapp.com/api/auth/signup\";\nexport const LOGIN_API = \"https://autcion.herokuapp.com/api/auth/signin\";\nexport const MENU_API = \"https://autcion.herokuapp.com/api/auction/list\";\nexport const USER_API = \"https://autcion.herokuapp.com/api/auth/user\";\nexport const create_AUCTION_API = \"https://autcion.herokuapp.com/api/auction\";\nexport const get_AUCTION_API = (no) => `https://autcion.herokuapp.com/api/auction/${no}`;\nexport const get_PLAYER_AUCTION_API = (no) => `https://autcion.herokuapp.com/api/auction/player/${no}`;\nexport const create_ORDER_API = (no) => `https://autcion.herokuapp.com/api/auction/${no}/order`;\nexport const create_PLAYER_API = (no) => `https://autcion.herokuapp.com/api/auction/${no}/player`;\nexport const start_AUCTION_API = (no) => `https://autcion.herokuapp.com/api/auction/${no}/start`;\nexport const close_AUCTION_API = (no) => `https://autcion.herokuapp.com/api/auction/${no}/close`;\nexport const GET = \"get\";\nexport const POST = \"post\";\n","export const AUC_TYPE = {\n    ENGLISH: \"E\",\n    DUTCH: \"D\",\n    SEALED1: \"S1\",\n    SEALED2: \"S2\",\n};\nexport const INIT_VALUE_TYPE = {\n    UNIFORM: \"U\",\n    GAUSSIAN: \"G\",\n};\n\nexport const SESSION_KEY = \"acuxxxtoxxxken\";\n","import * as url from \"../Endpoint\";\nimport * as constants from \"../constants\";\nimport axios from \"axios\";\n\nexport const login = (values, callback) => {\n    return axios.post(url.LOGIN_API, values).then(\n        (response) => {\n            // console.log(response);\n            localStorage.setItem(constants.SESSION_KEY, response.data.accessToken);\n            callback && callback();\n            return response;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const signup = (values, callback) => {\n    return axios.post(url.SIGNUP_API, values).then(\n        (response) => {\n            console.log(response);\n            login(values);\n            callback && callback();\n            return response;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\nconst TOKEN = localStorage.getItem(constants.SESSION_KEY);\nexport const getUserInfo = () => {\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    if (!TOKEN) return null;\n    return axios({\n        method: url.POST, //you can set what request you want to be\n        url: url.USER_API,\n        data: { token: TOKEN },\n    }).then(\n        (response) => {\n            console.log(999999, response.data);\n            localStorage.setItem(constants.SESSION_KEY, response.data.accessToken);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const getMenu = () => {\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    console.log(\"getMenu token\", TOKEN);\n\n    return axios({\n        method: url.GET, //you can set what request you want to be\n        url: url.MENU_API,\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            console.log(\"getMenu\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const createAuction = (data) => {\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    console.log(\"createAuction token\", TOKEN);\n    return axios({\n        method: url.POST, //you can set what request you want to be\n        url: url.create_AUCTION_API,\n        data: data,\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            console.log(\"createAuction\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const createOrder = (no, data) => {\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    console.log(\"createOrder token\", TOKEN);\n    return axios({\n        method: url.POST,\n        url: url.create_ORDER_API(no),\n        data: data,\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            console.log(\"createOrder\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const createPlayer = (no, name) => {\n    return axios({\n        method: url.POST,\n        url: url.create_PLAYER_API(no),\n        data: { name },\n    })\n        .then((response) => {\n            return response.data;\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n};\n\nexport const getPlayerAuction = (no) => {\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    console.log(\"getPlayerAuction token\", TOKEN);\n    return axios({\n        method: url.GET,\n        url: url.get_PLAYER_AUCTION_API(no),\n    }).then(\n        (response) => {\n            console.log(\"getPlayerAuction\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const getAuction = (no) => {\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    return axios({\n        method: url.GET,\n        url: url.get_AUCTION_API(no),\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const startAuction = (no, data) => {\n    console.log(\"startAuction token\", TOKEN);\n    return axios({\n        method: url.GET,\n        url: url.start_AUCTION_API(no),\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            console.log(\"startAuction\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n\nexport const closeAuction = (no, data) => {\n    console.log(\"closeAuction token\", TOKEN);\n    return axios({\n        method: url.GET,\n        url: url.close_AUCTION_API(no),\n        headers: {\n            \"x-access-token\": TOKEN,\n        },\n    }).then(\n        (response) => {\n            console.log(\"closeAuction\", response);\n            return response.data;\n        },\n        (error) => {\n            console.log(error);\n        }\n    );\n};\n","import React, { useState } from \"react\";\nimport { Form, Input, Button, Modal } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as utils from \"../../utils\";\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\nconst SignupModal = (props) => {\n    const [form] = Form.useForm();\n    const dispatch = useDispatch();\n    const onFinish = (values) => {\n        console.log(values);\n        utils.signup(values, close);\n        console.log(\"signup\", values);\n        //   axios.post(url.LOGIN_API, values).then(\n        //       (response) => {\n        //           console.log(response);\n        //           //  localStorage.setItem(\"token\", response.data.accessToken);\n        //       },\n        //       (error) => {\n        //           console.log(error);\n        //       }\n        //   );\n\n        //    {\n        //       \"username\":\"abc\",\n        //       \"email\":\"abc@gmail.com\",\n        //       \"password\":\"12345\",\n        //       \"roles\":[\"user\"]\n        //   }\n    };\n\n    const onReset = () => {\n        form.resetFields();\n    };\n\n    const onFill = () => {\n        form.setFieldsValue({\n            username: \"abc\",\n            email: \"abc@gmail.com\",\n            password: \"12345\",\n        });\n    };\n    //  function setToken(userToken) {\n    //      sessionStorage.setItem(\"token\", JSON.stringify(userToken));\n    //  }\n    //  const saveToken = (userToken) => {\n    //      localStorage.setItem(\"token\", JSON.stringify(userToken));\n    //      setToken(userToken.token);\n    //  };\n    //  function getToken() {\n    //      const tokenString = sessionStorage.getItem(\"token\");\n    //      const userToken = JSON.parse(tokenString);\n    //      return userToken?.token;\n    //  }\n    const { visible, close } = props;\n    return (\n        <>\n            <Modal\n                visible={visible}\n                title=\"Sign up\"\n                onCancel={() => {\n                    close();\n                }}\n                footer={null}\n            >\n                <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n                    <Form.Item\n                        name=\"username\"\n                        label=\"Name\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"email\"\n                        label=\"Email\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        label=\"Password\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                        {/* <Button htmlType=\"button\" onClick={onReset}> */}\n                        <Button htmlType=\"button\" onClick={onFill}>\n                            Reset\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default SignupModal;\n","import React, { useState } from \"react\";\nimport { Form, Input, Button, Modal } from \"antd\";\nimport { setUser } from \"../../store/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as util from \"../../utils\";\nimport * as constants from \"../../constants\";\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\nconst LoginModal = (props) => {\n    const [form] = Form.useForm();\n    const dispatch = useDispatch();\n    const onFinish = (values) => {\n        //   console.log(values);\n        //   setUser(values);\n\n        util.login(values).then((r) => {\n            console.log(1111, r.data.accessToken);\n            // ssaveToken(r.data.accessToken);\n            dispatch(setUser(r.data));\n            close();\n        });\n        //    {\n        //       \"username\":\"abc\",\n        //       \"email\":\"abc@gmail.com\",\n        //       \"password\":\"12345\",\n        //       \"roles\":[\"user\"]\n        //   }\n    };\n    const TOKEN = localStorage.getItem(constants.SESSION_KEY);\n    React.useEffect(() => {\n        if (TOKEN) {\n            util.getUserInfo();\n        }\n    }, []);\n    //  const AfterLogin = () => {\n    //      setUser();\n    //      close();\n    //  };\n    const onReset = () => {\n        form.resetFields();\n    };\n\n    const onFill = () => {\n        form.setFieldsValue({\n            username: \"abc\",\n            password: \"12345\",\n        });\n    };\n    //  const TOKEN = constants.SESSION_KEY;\n    //  function ssaveToken(userToken) {\n    //      sessionStorage.setItem(TOKEN, JSON.stringify(userToken));\n    //  }\n    //  const saveToken = (userToken) => {\n    //      localStorage.setItem(TOKEN, JSON.stringify(userToken));\n    //      setToken(userToken.token);\n    //  };\n    //  function getToken() {\n    //      const tokenString = sessionStorage.getItem(TOKEN);\n    //      const userToken = JSON.parse(tokenString);\n    //      return userToken?.token;\n    //  }\n    const { visible, close } = props;\n    return (\n        <>\n            <Modal\n                visible={visible}\n                title=\"Log in\"\n                onCancel={() => {\n                    close();\n                }}\n                footer={null}\n            >\n                <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n                    <Form.Item\n                        name=\"username\"\n                        label=\"name\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input your password!\",\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        label=\"Password\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                        {/* <Button htmlType=\"button\" onClick={onReset}> */}\n                        <Button htmlType=\"button\" onClick={onFill}>\n                            Reset\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default LoginModal;\n","import React, { useState } from \"react\";\nimport { Form, Input, Button, Modal, InputNumber, Select, Checkbox } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as utils from \"../../utils\";\nimport { AUC_TYPE, INIT_VALUE_TYPE } from \"../../constants\";\nconst { Option } = Select;\n\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\nconst CreateModal = (props) => {\n    const [form] = Form.useForm();\n    const [isAuto, setIsAuto] = React.useState(false);\n    const [isSealed, setIsSealed] = React.useState(false);\n    const [isGaussian, setIsGaussian] = React.useState(false);\n    //  const [type, setType] = React.useState();\n    const { visible, close } = props;\n    //  const dispatch = useDispatch();\n    const onFinish = async (values) => {\n        console.log(\"onFinish\", values);\n        const response = await utils.createAuction(values);\n        close();\n        window.open(`/?no=${response.no}`, \"_self\");\n    };\n\n    return (\n        <>\n            <Modal\n                visible={visible}\n                title=\"New Auction\"\n                onCancel={() => {\n                    close();\n                }}\n                width={1000}\n                footer={[]}\n            >\n                <Form\n                    labelCol={{\n                        span: 4,\n                    }}\n                    wrapperCol={{\n                        span: 14,\n                    }}\n                    layout=\"horizontal\"\n                    form={form}\n                    name=\"control-hooks\"\n                    onFinish={onFinish}\n                >\n                    <Form.Item\n                        name=\"title\"\n                        label=\"title\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"auc_type\"\n                        label=\"type\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Select\n                            //  value={value.currency || currency}\n                            initialValue={AUC_TYPE.ENGLISH}\n                            style={{\n                                width: 150,\n                                margin: \"0 8px\",\n                            }}\n                            onChange={(v) => {\n                                console.log(\"select\", v);\n                                //   setType(v);\n                                setIsSealed(v === AUC_TYPE.SEALED1 || v === AUC_TYPE.SEALED2);\n                            }}\n                        >\n                            <Option value={AUC_TYPE.ENGLISH}>ENGLISH</Option>\n                            <Option value={AUC_TYPE.DUTCH}>DUTCH</Option>\n                            <Option value={AUC_TYPE.SEALED1}>SEALED1</Option>\n                            <Option value={AUC_TYPE.SEALED2}>SEALED2</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item name=\"period\" label=\"Time limitaion\">\n                        <InputNumber />\n                    </Form.Item>\n                    {!isSealed ? (\n                        <Form.Item\n                            name=\"init_price\"\n                            label=\"init_price\"\n                            rules={[\n                                {\n                                    required: true,\n                                },\n                            ]}\n                        >\n                            <InputNumber />\n                        </Form.Item>\n                    ) : null}\n                    <Form.Item\n                        name=\"reservation_price\"\n                        label=\"Resevation price\"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"value_type\"\n                        label=\"user value type \"\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <Select\n                            //  value={value.currency || currency}\n                            initialValue={INIT_VALUE_TYPE.UNIFORM}\n                            //  style={{\n                            //      width: 150,\n                            //      margin: \"0 8px\",\n                            //  }}\n                            onChange={(v) => {\n                                console.log(\"setIsGaussian\", v);\n                                setIsGaussian(v === INIT_VALUE_TYPE.GAUSSIAN);\n                            }}\n                        >\n                            <Option value={INIT_VALUE_TYPE.UNIFORM}>UNIFORM</Option>\n                            <Option value={INIT_VALUE_TYPE.GAUSSIAN}>GAUSSIAN</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"from_std\"\n                        label={isGaussian ? \"std\" : \"from\"}\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"to_dev\"\n                        label={isGaussian ? \"dev\" : \"to\"}\n                        rules={[\n                            {\n                                required: true,\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    {!isSealed ? (\n                        <Form.Item name=\"is_auto\" label=\"is auto\">\n                            <Checkbox\n                                onChange={(e) => {\n                                    console.log(\"isAuto\", e.target.checked);\n                                    setIsAuto(e.target.checked);\n                                }}\n                            />\n                        </Form.Item>\n                    ) : null}\n                    {isAuto ? (\n                        <>\n                            <Form.Item\n                                name=\"auto_p_fragment\"\n                                label=\"auto_p_fragment\"\n                                rules={[\n                                    {\n                                        required: true,\n                                    },\n                                ]}\n                            >\n                                <InputNumber />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"auto_t_fragment\"\n                                label=\"auto_t_fragment\"\n                                rules={[\n                                    {\n                                        required: true,\n                                    },\n                                ]}\n                            >\n                                <InputNumber />\n                            </Form.Item>\n                        </>\n                    ) : null}\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                        <Button>cancel</Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </>\n    );\n};\n\nexport default CreateModal;\n","import * as React from \"react\";\nimport { BankOutlined, MenuOutlined } from \"@ant-design/icons\";\nimport { Button, message } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./style.scss\";\nimport { Link } from \"react-router-dom\";\nimport SignupModal from \"../SignupModal\";\nimport * as util from \"../../utils\";\nimport LoginModal from \"../LoginModal\";\nimport CreateModal from \"../CreateModal\";\nimport * as action from \"../../store/action\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGavel } from \"@fortawesome/free-solid-svg-icons\";\nimport { logout } from \"../../store/action\";\nconst NavBar = (props) => {\n    const [showLogin, setShowLogin] = React.useState(false);\n    const [showSignup, setShowSignup] = React.useState(false);\n\n    const isLogin = useSelector((state) => state.isLogin);\n    const dispatch = useDispatch();\n    const showMenu = useSelector((state) => state.showMenu);\n    const showCreatePanel = useSelector((state) => state.showCreatePanel);\n    //  const showCreatePanel = useSelector((state) => state.showCreatePanel);\n\n    const handleLogout = () => {\n        dispatch(logout());\n    };\n    const showingForum = () => {\n        dispatch(action.setShowMenu(!showMenu));\n    };\n    const showingCreate = (v) => {\n        dispatch(action.setShowCreatePanel(v));\n    };\n    React.useEffect(() => {\n        checkUser();\n    }, []);\n    const checkUser = async () => {\n        const info = await util.getUserInfo();\n        console.log(info);\n        if (info.status >= 400) {\n            message.warning(info.message);\n            return;\n        }\n        if (info) {\n            dispatch(action.setUser(info));\n        }\n    };\n    return (\n        <div className=\"navBar\">\n            <div className=\"groupLogo\">\n                <div className=\"logoIcon burger\" onClick={() => showingForum(true)}>\n                    <MenuOutlined />\n                </div>\n                <div className=\"logoTxt\">Auction Game</div>\n                <div className=\"logoIcon\">\n                    <FontAwesomeIcon icon={faGavel}></FontAwesomeIcon>\n                </div>\n            </div>\n\n            <div className=\"groupBtn\">\n                {!isLogin ? (\n                    <>\n                        <div className=\"navBtn\">\n                            <Button onClick={() => setShowSignup(true)}>Sign up</Button>\n                        </div>\n\n                        <div className=\"navBtn\">\n                            <Button onClick={() => setShowLogin(true)}>Login</Button>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className=\"navBtn\">\n                            <Button onClick={() => showingCreate(true)}>New Auction</Button>\n                        </div>\n\n                        <div className=\"navBtn\">\n                            <Button onClick={() => handleLogout()}>Log out</Button>\n                        </div>\n                    </>\n                )}\n                {showSignup ? <SignupModal visible={showSignup} close={() => setShowSignup(false)} /> : null}\n\n                {showLogin ? <LoginModal visible={showLogin} close={() => setShowLogin(false)} /> : null}\n                {showCreatePanel ? <CreateModal visible={showCreatePanel} close={() => showingCreate(false)} /> : null}\n            </div>\n        </div>\n    );\n};\n// const mapDispatchToProps = {\n\n// }\n// NavBar = connect(null, mapDispatchToProps)(NavBar);\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./style.scss\";\nimport { Menu, message } from \"antd\";\nimport { MailOutlined, RiseOutlined, FallOutlined } from \"@ant-design/icons\";\nimport * as utils from \"../../utils\";\nimport queryString from \"query-string\";\nimport { AUC_TYPE } from \"../../constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { logout, setCurrentAuction } from \"../../store/action\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nconst { SubMenu } = Menu;\n\nconst SideMenu = (props) => {\n    const [data, setData] = React.useState();\n    const [openKey, setOpenKey] = React.useState(AUC_TYPE.ENGLISH);\n    const currentAuction = useSelector((state) => state.currentAuction);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        init();\n    }, []);\n    React.useEffect(() => {\n        setOpenKey(currentAuction.auc_type);\n        console.log(774411, currentAuction);\n    }, [currentAuction]);\n    const init = async () => {\n        const d = await utils.getMenu();\n        if (d.status >= 400) {\n            message.warning(d.message);\n            dispatch(logout());\n            return;\n        }\n        console.log(8888, d, AUC_TYPE.ENGLISH);\n\n        const m = {\n            [AUC_TYPE.ENGLISH]: filter(AUC_TYPE.ENGLISH, d),\n            [AUC_TYPE.DUTCH]: filter(AUC_TYPE.DUTCH, d),\n            [AUC_TYPE.SEALED1]: filter(AUC_TYPE.SEALED1, d),\n            [AUC_TYPE.SEALED2]: filter(AUC_TYPE.SEALED2, d),\n        };\n        setData(m);\n\n        //   dispatch(setCurrentAuction(m[AUC_TYPE.ENGLISH][0]));\n        console.log(2222, m);\n    };\n    const filter = (type, d) => {\n        let res = [];\n        if (Array.isArray(d) && d) {\n            res = d?.filter((ele) => ele.auc_type === type);\n        }\n        return res;\n    };\n    const handleOpenKey = (ty) => {\n        //   if (ty === openKey) {\n        //       console.log(88997766);\n        //       setOpenKey([]);\n        //   }\n        setOpenKey(ty);\n    };\n    return (\n        <div className=\"sideMenu\">\n            <Menu\n                defaultSelectedKeys={[\"1\"]}\n                defaultOpenKeys={[AUC_TYPE.ENGLISH]}\n                openKeys={[openKey]}\n                mode=\"inline\"\n                theme=\"light\"\n                inlineCollapsed={false}\n            >\n                <SubMenu\n                    key={AUC_TYPE.ENGLISH}\n                    icon={<RiseOutlined />}\n                    title=\"English\"\n                    onTitleClick={() => {\n                        handleOpenKey(AUC_TYPE.ENGLISH);\n                    }}\n                >\n                    {data &&\n                        data[AUC_TYPE.ENGLISH]?.map((ele) => (\n                            <Menu.Item\n                                key={ele.no}\n                                //   onClick={(e) => {\n                                //       handleAuction(e.key);\n                                //   }}\n                            >\n                                <Link to={`/?no=${ele.no}`}>\n                                    {ele.close_time !== null ? <CloseCircleOutlined /> : null}\n                                    {ele.title}\n                                </Link>\n                            </Menu.Item>\n                        ))}\n                </SubMenu>\n                <SubMenu\n                    key={AUC_TYPE.DUTCH}\n                    icon={<FallOutlined />}\n                    title=\"Dutch\"\n                    onTitleClick={() => {\n                        handleOpenKey(AUC_TYPE.DUTCH);\n                    }}\n                >\n                    {data &&\n                        data[AUC_TYPE.DUTCH]?.map((ele) => (\n                            <Menu.Item key={ele.no}>\n                                <Link to={`/?no=${ele.no}`}>\n                                    {ele.close_time !== null ? <CloseCircleOutlined /> : null}\n                                    {ele.title}\n                                </Link>\n                            </Menu.Item>\n                        ))}\n                </SubMenu>\n                <SubMenu\n                    key={AUC_TYPE.SEALED1}\n                    icon={<MailOutlined />}\n                    title=\"Sealed\"\n                    onTitleClick={() => {\n                        handleOpenKey(AUC_TYPE.SEALED1);\n                    }}\n                >\n                    {data &&\n                        data[AUC_TYPE.SEALED1]?.map((ele) => (\n                            <Menu.Item key={ele.no}>\n                                <Link to={`/?no=${ele.no}`}>\n                                    {ele.close_time !== null ? <CloseCircleOutlined /> : null}\n                                    {ele.title}\n                                </Link>\n                            </Menu.Item>\n                        ))}\n                </SubMenu>\n                <SubMenu\n                    key={AUC_TYPE.SEALED2}\n                    icon={<MailOutlined />}\n                    title=\"Sealed second\"\n                    onTitleClick={() => {\n                        handleOpenKey(AUC_TYPE.SEALED2);\n                    }}\n                >\n                    {data &&\n                        data[AUC_TYPE.SEALED2]?.map((ele) => (\n                            <Menu.Item key={ele.no}>\n                                <Link to={`/?no=${ele.no}`}>\n                                    {ele.close_time !== null ? <CloseCircleOutlined /> : null}\n                                    {ele.title}\n                                </Link>\n                            </Menu.Item>\n                        ))}\n                </SubMenu>\n            </Menu>\n        </div>\n    );\n};\n\nexport default SideMenu;\n","import React, { useState } from \"react\";\nimport { Descriptions } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as util from \"../../utils\";\nimport * as constants from \"../../constants\";\nconst AuctionInfo = (props) => {\n    const { visible, close, data, isPlayer, playerInfo } = props;\n    const {\n        no,\n        title,\n        start_time,\n        left_time,\n        auto_t_fragment,\n        auto_p_fragment,\n        from_std,\n        init_price,\n        is_auto,\n        period,\n        reservation_price,\n        to_dev,\n        value_type,\n        winner,\n        auc_type,\n        close_time,\n        current_price,\n    } = data;\n    const getTypeLabel = (ty) => {\n        let label = \"\";\n        Object.keys(constants.AUC_TYPE).forEach((ele) => {\n            if (ty == constants.AUC_TYPE[ele]) {\n                label = ele;\n            }\n        });\n        return label;\n    };\n    const getValueTypeLabel = (ty) => {\n        let label = \"\";\n        Object.keys(constants.INIT_VALUE_TYPE).forEach((ele) => {\n            if (ty == constants.INIT_VALUE_TYPE[ele]) {\n                label = ele;\n            }\n        });\n        return label;\n    };\n    const formatTime = (str) => {\n        return str?.split(\".\")[0]?.replace(\"T\", \" \");\n    };\n    const blank = \"- -\";\n    return (\n        <>\n            <Descriptions title={\"Title: \" + title} column={5} vertical>\n                <Descriptions.Item label=\"No\" span={3}>\n                    <a href={`/invitation?title=${title}&no=${no}`} target=\"_blank\">\n                        {no}\n                    </a>\n                </Descriptions.Item>\n                <Descriptions.Item label=\"Start at\">{formatTime(start_time) || blank}</Descriptions.Item>\n                {close_time ? (\n                    <Descriptions.Item label=\"Close at\">{formatTime(close_time) || blank}</Descriptions.Item>\n                ) : (\n                    <Descriptions.Item label=\"Left\">{left_time || blank}</Descriptions.Item>\n                )}\n            </Descriptions>\n            <Descriptions size=\"small\" column={3} bordered>\n                <Descriptions.Item label=\"Type\">{getTypeLabel(auc_type)}</Descriptions.Item>\n                <Descriptions.Item label=\"Start Price\">{init_price || \"-\"}</Descriptions.Item>\n                <Descriptions.Item label=\"Time Limitation\">{period} mins</Descriptions.Item>\n                {isPlayer && playerInfo ? (\n                    <>\n                        <Descriptions.Item label=\"Name\">{playerInfo.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"init_value\">{playerInfo.init_value}</Descriptions.Item>\n                        <Descriptions.Item label=\"current_value\">{playerInfo.current_value}</Descriptions.Item>\n                    </>\n                ) : null}\n                {isPlayer ? null : (\n                    <>\n                        <Descriptions.Item label=\"User value type\">{getValueTypeLabel(value_type)}</Descriptions.Item>\n                        <Descriptions.Item label=\"User value from\">{from_std}</Descriptions.Item>\n                        <Descriptions.Item label=\"User value to\">{to_dev}</Descriptions.Item>\n                        {auc_type === constants.AUC_TYPE.SEALED1 || auc_type === constants.AUC_TYPE.SEALED2 ? null : (\n                            <>\n                                <Descriptions.Item label=\"init_price\">{init_price}</Descriptions.Item>\n                                <Descriptions.Item label=\"reservation_price\">{reservation_price}</Descriptions.Item>\n                            </>\n                        )}\n                        {winner ? (\n                            <Descriptions.Item label=\"winner\">{winner}</Descriptions.Item>\n                        ) : auc_type !== constants.AUC_TYPE.SEALED1 && auc_type !== constants.AUC_TYPE.SEALED2 ? (\n                            <Descriptions.Item label=\"current price\">{current_price}</Descriptions.Item>\n                        ) : null}\n                        {is_auto ? (\n                            <>\n                                <Descriptions.Item label=\"is_auto\">{is_auto ? \"T\" : \"F\"}</Descriptions.Item>\n                                <Descriptions.Item label=\"auto_p_fragment\">{auto_p_fragment}</Descriptions.Item>\n                                <Descriptions.Item label=\"auto_t_fragment\">{auto_t_fragment}</Descriptions.Item>\n                            </>\n                        ) : null}\n                    </>\n                )}\n            </Descriptions>\n        </>\n    );\n};\n\nexport default AuctionInfo;\n","import React, { useState } from \"react\";\nimport { Descriptions, Table } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Orders = (props) => {\n    const { visible, close, data } = props;\n    const formatData = (d) =>\n        d &&\n        d.map((ele) => {\n            return {\n                price: ele.price,\n                name: ele.player.name,\n                init_value: ele.player.init_value,\n                time: ele.createdAt.split(\".\")[0].split(\"T\").join(\" \"),\n            };\n        });\n    const columns = [\n        {\n            title: \"Price\",\n            dataIndex: \"price\",\n            // specify the condition of filtering result\n            // here is that finding the name started with `value`\n            onFilter: (value, record) => record.name.indexOf(value) === 0,\n            sorter: (a, b) => a.price - b.price,\n            sortDirections: [\"descend\", \"ascend\"],\n        },\n        {\n            title: \"Name\",\n            dataIndex: \"name\",\n        },\n        {\n            title: \"Init value\",\n            dataIndex: \"init_value\",\n            onFilter: (value, record) => record.address.indexOf(value) === 0,\n            sorter: (a, b) => a.init_value - b.init_value,\n            sortDirections: [\"descend\", \"ascend\"],\n        },\n        {\n            title: \"Time\",\n            dataIndex: \"time\",\n        },\n    ];\n    function onChange(pagination, filters, sorter, extra) {\n        console.log(\"params\", pagination, filters, sorter, extra);\n    }\n    //  const data = [];\n    //  for (let i = 0; i < 100; i++) {\n    //      data.push({\n    //          key: i,\n    //          name: \"John Brown\",\n    //          price: 32,\n    //          Time: \"New York No. 1 Lake Park\",\n    //      });\n    //  }\n\n    return (\n        <>\n            <Descriptions title=\"Orders\"></Descriptions>Total: {data?.length || 0}\n            <Table columns={columns} dataSource={formatData(data)} pagination={false} scroll={{ y: 200 }} />\n        </>\n    );\n};\n\nexport default Orders;\n","import React, { useState } from \"react\";\nimport { Descriptions, Table } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Players = (props) => {\n    const { visible, close, data } = props;\n    const formatData = (data) =>\n        data &&\n        data.map((ele) => {\n            console.log({\n                name: ele.name,\n                hasSent: ele.init_value > ele.current_value,\n            });\n            return {\n                name: ele.name,\n                hasSent: ele.init_value > ele.current_value ? \"T\" : \"F\",\n            };\n        });\n    const columns = [\n        {\n            title: \"Name\",\n            dataIndex: \"name\",\n            // specify the condition of filtering result\n            // here is that finding the name started with `value`\n\n            onFilter: (value, record) => record.name.indexOf(value) === 0,\n            sorter: (a, b) => a.name.length - b.name.length,\n            sortDirections: [\"descend\", \"ascend\"],\n        },\n        {\n            title: \"Sent order\",\n            dataIndex: \"hasSent\",\n            filters: [\n                {\n                    text: \"T\",\n                    value: \"T\",\n                },\n                {\n                    text: \"F\",\n                    value: \"F\",\n                },\n            ],\n            onFilter: (value, record) => record.hasSent === value,\n            sorter: (a, b) => a.price - b.price,\n            sortDirections: [\"descend\", \"ascend\"],\n        },\n    ];\n    function onChange(pagination, filters, sorter, extra) {\n        console.log(\"params\", pagination, filters, sorter, extra);\n    }\n    //  const data = [];\n    //  for (let i = 0; i < 100; i++) {\n    //      data.push({\n    //          key: i,\n    //          name: \"John Brown\",\n    //          hasSent: i % 2 == 0 ? \"T\" : \"F\",\n    //      });\n    //  }\n\n    return (\n        <>\n            <Descriptions title=\"Players\"></Descriptions>Total: {data?.length || 0}\n            <Table columns={columns} dataSource={formatData(data)} pagination={false} scroll={{ y: 200 }} />\n        </>\n    );\n};\n\nexport default Players;\n","import React, { useState } from \"react\";\n\nimport \"./App.scss\";\nimport { setCurrentAuction } from \"../../store/action\";\n\nimport NavBar from \"../../components/NavBar\";\nimport SideMenu from \"../../components/SideMenu\";\nimport AuctionInfo from \"../../components/AuctionInfo\";\nimport Orders from \"../../components/Orders\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import StatisticPanel from \"../../components/StatisticPanel\";\n// import { setCurrentCountry } from \"../../store/action\";\nimport * as utils from \"../../utils\";\nimport { Button, InputNumber } from \"antd\";\nimport * as constants from \"../../constants\";\nimport Players from \"../../components/Players\";\nimport * as action from \"../../store/action\";\nimport queryString from \"query-string\";\n\nfunction App(props) {\n    const [no, setNo] = React.useState();\n    const [myPrice, setMyPrice] = React.useState(0);\n    const [isClosed, setIsClosed] = useState(false);\n    //  const [drawerData, setDrawerData] = useState({});\n    const current_auction_data = useSelector((state) => state.currentAuction);\n    const showMenu = useSelector((state) => state.showMenu);\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        QueryParamsDemo();\n        console.log(current_auction_data, 8888777);\n    }, [props]);\n\n    function QueryParamsDemo() {\n        let query = queryString.parse(props.location.search);\n        retrieveAuction(query.no);\n    }\n    const retrieveAuction = async (no) => {\n        if (!no) return;\n        const a = await utils.getAuction(no);\n        if (a) {\n            dispatch(setCurrentAuction(a));\n        }\n    };\n    const handleutils = async (type) => {\n        const auction = {\n            title: \"flower\",\n            auc_type: \"E\",\n            from_std: \"50\",\n            to_dev: \"100\",\n            value_type: \"G\",\n            period: 2,\n            reservation_price: 1000,\n            init_price: 1000,\n            is_auto: true,\n            auto_t_fragment: 1,\n            auto_p_fragment: 100,\n        };\n        let res;\n        switch (type) {\n            case \"getMenu\":\n                res = await utils.getMenu();\n                console.log(res);\n                return;\n            case \"createAuction\":\n                res = await utils.createAuction(auction);\n                setNo(res.no);\n                console.log(res);\n                return;\n            case \"createPlayer\":\n                const name = \"Ird77i\";\n                res = await utils.createPlayer(no, name);\n                console.log(res); //@TODO 缺 auction infomation\n                return;\n            case \"createOrder\":\n                const order = {\n                    player_id: 1,\n                    price: 10.6,\n                };\n                res = await utils.createOrder(no, order);\n                console.log(res);\n                return;\n            case \"close\":\n                res = await utils.closeAuction(no);\n                console.log(res);\n                return;\n            case \"start\":\n                res = await utils.startAuction(no);\n                console.log(res);\n                return;\n            case \"getPlayerAuction\":\n                res = await utils.getPlayerAuction(no);\n                console.log(res);\n                return;\n            case \"getAuction\":\n                res = await utils.getAuction(no);\n                console.log(res);\n                return;\n        }\n    };\n    const handleAuction = (cmd, c) => {\n        let res;\n        switch (cmd) {\n            case \"start\":\n                updateWithCountDown();\n                res = utils.startAuction(current_auction_data.no);\n                break;\n            case \"close\":\n                console.log(\"已經關了\");\n                setIsClosed(true);\n                res = utils.closeAuction(current_auction_data.no);\n                break;\n            case \"updateWithCountDown\":\n                updateWithCountDown();\n                break;\n        }\n\n        res.then((data) => {\n            if (data) {\n                dispatch(action.setCurrentAuction(data));\n            }\n        });\n    };\n    function updateWithCountDown() {\n        setTimeout(function () {\n            const res = utils.getAuction(current_auction_data.no);\n            res.then((data) => {\n                if (data) {\n                    dispatch(action.setCurrentAuction(data));\n                    if (!data.close_time) {\n                        updateWithCountDown();\n                    }\n                }\n            });\n        }, 1000);\n    }\n    const handleDeductPrice = async (isDutch) => {\n        //   console.log(price);\n        //   const sendData = {\n        //       player_id: playerData.id,\n        //       price: isDutch ? current_auction_data.current_price : myPrice,\n        //   };\n        //   const res = await utils.createOrder(current_auction_data.no, sendData);\n        //   if (res.status >= 400) {\n        //       message.warning(res.message);\n        //       return;\n        //   }\n        //   message.success(`Your order(price at${sendData.price}) had been sent`);\n    };\n    return (\n        <div className=\"App\">\n            <NavBar />\n            <div className=\"container\">\n                {showMenu ? <SideMenu /> : null}\n                {!current_auction_data.no ? (\n                    <h1>hellow world</h1>\n                ) : (\n                    <div className=\"auctionBlock\">\n                        <div className=\"start_btn\">\n                            <Button\n                                type=\"primary\"\n                                onClick={() => {\n                                    handleAuction(\"start\");\n                                }}\n                            >\n                                Start\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    handleAuction(\"close\");\n                                }}\n                            >\n                                Close\n                            </Button>\n                        </div>\n                        <AuctionInfo data={current_auction_data} />\n                        {current_auction_data.auc_type === constants.AUC_TYPE.DUTCH ? (\n                            <div className=\"myOrder\">\n                                <InputNumber onChange={(v) => setMyPrice(v)} />\n                                <Button\n                                    type=\"primary\"\n                                    onClick={() => {\n                                        handleDeductPrice();\n                                    }}\n                                >\n                                    DEDUCT\n                                </Button>\n                                <Button\n                                    onClick={() => {\n                                        setMyPrice(\"\");\n                                    }}\n                                >\n                                    Reset\n                                </Button>\n                            </div>\n                        ) : null}\n                        <Orders data={current_auction_data.orders} />\n                        <Players data={current_auction_data.players} />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import * as React from \"react\";\nimport \"./style.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGavel } from \"@fortawesome/free-solid-svg-icons\";\nconst InvitationHeader = (props) => {\n    return (\n        <div className=\"invitationNavBar\">\n            <div className=\"groupLogo\">\n                <div className=\"logoTxt\">Auction Game</div>\n                <div className=\"logoIcon\">\n                    <FontAwesomeIcon icon={faGavel}></FontAwesomeIcon>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default InvitationHeader;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport InvitationHeader from \"../../components/InvitationHeader\";\nimport queryString from \"query-string\";\nconst QRCode = require(\"qrcode.react\");\nconst base_url = process.env.REACT_APP_BASE || \"https://autcion.herokuapp.com/\";\nfunction App(props) {\n    const [info, setInfo] = React.useState({});\n    React.useEffect(() => {\n        QueryParamsDemo();\n    }, [props]);\n\n    function QueryParamsDemo() {\n        let query = queryString.parse(props.location.search);\n        console.log(query);\n        setInfo(query);\n    }\n    const url = `${base_url}/bid?no=${info.no}`;\n    return (\n        <div className=\"App\">\n            <InvitationHeader />\n            <div className=\"container\">\n                <div className=\"invitation\">\n                    <h1>Welcome to join the auction! </h1>\n                    <h3>Auction title: {info.title}</h3>\n                    <h3>Auction no: {info.no}</h3>\n                    <div className=\"qrCode\">\n                        <QRCode value={url} />\n                    </div>\n                    <div>\n                        <a href={url}>{url}</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport * as url from \"../../Endpoint\";\nimport AuctionInfo from \"../../components/AuctionInfo\";\nimport * as constants from \"../../constants\";\n\nimport { Form, Input, Button, message, InputNumber } from \"antd\";\nimport * as utils from \"../../utils\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport InvitationHeader from \"../../components/InvitationHeader\";\nimport queryString from \"query-string\";\nimport { setPlayerData, setCurrentAuction } from \"../../store/action\";\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\nfunction App(props) {\n    const [form] = Form.useForm();\n    const [myPrice, setMyPrice] = React.useState(0);\n    const playerData = useSelector((state) => state.playerData);\n    const showPlayerPage = useSelector((state) => state.showPlayerPage);\n    const current_auction_data = useSelector((state) => state.currentAuction);\n\n    const dispatch = useDispatch();\n    React.useEffect(() => {\n        QueryParamsDemo();\n    }, [props]);\n    const onFinish = async (values) => {\n        const { auctionNo, name } = values;\n        const res = await utils.createPlayer(auctionNo, name);\n        if (res.status >= 400) {\n            message.warning(res.message);\n            return;\n        }\n        dispatch(setPlayerData(res));\n        dispatch(setCurrentAuction(res.auction));\n        setMyPrice(\"\");\n        updateWithCountDown();\n    };\n    function QueryParamsDemo() {\n        let query = queryString.parse(props.location.search);\n        form.setFieldsValue({\n            auctionNo: query.no,\n        });\n    }\n    const onFill = () => {\n        form.setFieldsValue({\n            auctionNo: \"\",\n            name: \"\",\n        });\n    };\n    const handleCreateOrder = async (isDutch) => {\n        //   console.log(price);\n        const sendData = {\n            player_id: playerData.id,\n            price: isDutch ? current_auction_data.current_price : myPrice,\n        };\n        const res = await utils.createOrder(current_auction_data.no, sendData);\n\n        if (res.status >= 400) {\n            message.warning(res.message);\n            return;\n        }\n        message.success(`Your order(price at${sendData.price}) had been sent`);\n    };\n    function updateWithCountDown() {\n        setTimeout(function () {\n            const res = utils.getAuction(current_auction_data.no);\n            res.then((data) => {\n                if (data) {\n                    dispatch(setCurrentAuction(data));\n                    if (!data.close_time) {\n                        updateWithCountDown();\n                    }\n                }\n            });\n        }, 1000);\n    }\n    return (\n        <div className=\"App\">\n            <InvitationHeader />\n            <div className=\"container\">\n                {showPlayerPage ? (\n                    <div className=\"auctionBlock\">\n                        <AuctionInfo data={current_auction_data} isPlayer={true} playerInfo={playerData} />\n                        <div className=\"currentPrice\">current price: {current_auction_data.current_price || \"-\"}</div>\n                        {current_auction_data.type === constants.AUC_TYPE.DUTCH ? (\n                            <Button\n                                type=\"primary\"\n                                onClick={() => {\n                                    handleCreateOrder(true);\n                                }}\n                            >\n                                Accept Now\n                            </Button>\n                        ) : null}\n                        <div className=\"myOrder\">\n                            <InputNumber onChange={(v) => setMyPrice(v)} />\n                            <Button\n                                type=\"primary\"\n                                onClick={() => {\n                                    handleCreateOrder();\n                                }}\n                            >\n                                BID\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    setMyPrice(\"\");\n                                }}\n                            >\n                                Reset\n                            </Button>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"bid\">\n                        <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish}>\n                            <Form.Item\n                                name=\"auctionNo\"\n                                label=\"Auction No\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Please input a auction no!\",\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"name\"\n                                label=\"Name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Please input an user name!\",\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item {...tailLayout}>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Submit\n                                </Button>\n                                {/* <Button htmlType=\"button\" onClick={onReset}> */}\n                                <Button htmlType=\"button\" onClick={onFill}>\n                                    Reset\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import * as types from \"./types\";\n\nconst mockPlayer = {\n    id: 30,\n    name: \"iris\",\n    auction_id: 59,\n    init_value: 87.2754,\n    current_value: 87.2754,\n    updatedAt: \"2021-05-22T16:04:00.963Z\",\n    createdAt: \"2021-05-22T16:04:00.963Z\",\n    auction: {\n        id: 59,\n        no: \"AUC21052240334\",\n        title: \"sealed\",\n        auc_type: \"S1\",\n        from_std: 10,\n        to_dev: 300,\n        value_type: \"U\",\n        winner: null,\n        period: 10,\n        left_period: null,\n        left_time: null,\n        start_time: null,\n        close_time: null,\n        init_price: null,\n        current_price: null,\n        reservation_price: 100,\n        is_auto: null,\n        auto_t_fragment: null,\n        auto_p_fragment: null,\n        create_by: null,\n        update_by: null,\n        createdAt: \"2021-05-22T16:03:34.695Z\",\n        updatedAt: \"2021-05-22T16:03:34.695Z\",\n    },\n};\n\nconst mockAuction = {\n    id: 59,\n    no: \"AUC21052240334\",\n    title: \"sealed\",\n    auc_type: \"S1\",\n    from_std: 10,\n    to_dev: 300,\n    value_type: \"U\",\n    winner: null,\n    period: 10,\n    left_period: null,\n    left_time: null,\n    start_time: null,\n    close_time: null,\n    init_price: null,\n    current_price: null,\n    reservation_price: 100,\n    is_auto: null,\n    auto_t_fragment: null,\n    auto_p_fragment: null,\n    create_by: null,\n    update_by: null,\n    createdAt: \"2021-05-22T16:03:34.695Z\",\n    updatedAt: \"2021-05-22T16:03:34.695Z\",\n};\n\nconst initialState = {\n    user: {},\n    isLogin: false,\n    currentCountry: \"globle\",\n    showMenu: false,\n    showCreatePanel: false,\n    showPlayerPage: false,\n    //  currentAuction: mockAuction,\n    currentAuction: {},\n    //  playerData: mockPlayer,\n    playerData: {},\n};\nexport function dataReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_USER:\n            console.log(\"reducser\", action);\n            return {\n                ...state,\n                user: action.data,\n                showMenu: true,\n                isLogin: true,\n            };\n        case types.SET_CURRENT_AUCTION:\n            console.log(\"SET_CURRENT_AUCTION\", action.data);\n            return {\n                ...state,\n                currentAuction: action.data,\n            };\n        case types.SET_SHOW_MENU:\n            console.log(\"SET_SHOW_MENU\", action);\n            return {\n                ...state,\n                showMenu: action.data,\n            };\n        case types.LOG_OUT:\n            return {\n                ...state,\n                isLogin: false,\n                user: {},\n            };\n        case types.SET_SHOW_CREATE:\n            return {\n                ...state,\n                showCreatePanel: action.data,\n            };\n        case types.SET_PLAYER_DATA:\n            return {\n                ...state,\n                playerData: action.data,\n                showPlayerPage: true,\n            };\n        default:\n            return state;\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport home from \"./containers/Home\";\nimport Invitation from \"./containers/Invitation\";\nimport Bid from \"./containers/Bid\";\n\n// import RegisterPage from \"./components/RegisterPage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { dataReducer } from \"./store/reducers\";\nimport \"antd/dist/antd.css\";\n// import Forum from \"./containers/fourm\";\n\n// import history from \"./history\";\nconst store = createStore(dataReducer);\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={home} />\n                <Route path=\"/invitation\" component={Invitation} />\n                <Route path=\"/bid\" component={Bid} />\n            </Switch>\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}